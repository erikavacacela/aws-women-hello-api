name: Dev - Deploy gradle app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-app:
    name: Build java application
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.4
    - name: Execute Gradle build
      run: ./gradlew build
    - name: Upload JAR
      uses: actions/upload-artifact@v3
      with:
        name: java-build
        path: ./build/libs/my-kiosk-api-*.jar

  build-push-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
      AWS_REGION: us-east-2
    needs: build-app
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Download JAR
      uses: actions/download-artifact@v3
      with:
        name: java-build
        path: ./build/libs/
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      working-directory: .
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
